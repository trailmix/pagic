name: ci

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        # os: [windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup deno
        uses: denolib/setup-deno@v2
        with:
          deno-version: v1.8.1

      - name: Run tests
        if: matrix.os == 'ubuntu-latest'
        run: deno test --unstable --allow-env --allow-read --allow-write --allow-net --allow-run --import-map=import_map.json --coverage=./coverage/output src/tests

      - name: Run tests (without coverage)
        if: matrix.os != 'ubuntu-latest'
        run: deno test --unstable --allow-env --allow-read --allow-write --allow-net --allow-run --import-map=import_map.json src/tests

      - name: Generate codecov report
        if: matrix.os == 'ubuntu-latest'
        run: deno coverage --unstable ./coverage --lcov > ./coverage/lcov.info

      - name: Push codecov report
        if: matrix.os == 'ubuntu-latest'
        run: bash <(curl -s https://codecov.io/bash)
